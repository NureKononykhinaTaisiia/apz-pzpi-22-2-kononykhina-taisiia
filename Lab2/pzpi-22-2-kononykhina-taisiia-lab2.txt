         Міністерство освіти і науки України Харківський національний університет радіоелектроніки


Кафедра програмної інженерії






Звіт
З дисципліни «Архітектура програмного забезпечення» 
З лабораторної роботи №2
На тему: «РОЗРОБКА ПРОГРАМНОЇ АРХІТЕКТУРИ, СТВОРЕННЯ ТА ВІДЛАГОДЖЕННЯ ПРОГРАМНОГО КОДУ СЕРВЕРНОЇ ЧАСТИНИ ПРОГРАМНОЇ СИСТЕМИ»






Виконавець:
ст. гр. ПЗПІ-22-2	Кононихіна Т.Р.

Перевірив:
доц. каф. ПІ	Сокорчук І. П.





Харків 2025

     Назва проекту: Програмна система для оренди спорядження для хобі та розваг.



1 МЕТА РОБОТИ


     Метою даної лабораторної роботи є розробка бази даних для серверної частини програмної системи оренди спорядження для хобі та розваг та прикладного програмного інтерфейсу.

2 ХІД РОБОТИ

     Проєкт розпочався з побудови UML діаграму розгортання (Deployment Diagram) (рис 2.1), яка ілюструє фізичну архітектуру системи оренди спорядження. Дана діаграма демонструє, як основні компоненти — мобільний застосунок, веб-клієнт на React, серверна частина на Node.js та база даних MongoDB — взаємодіють між собою.


Рисунок 2.1 - UML діаграму розгортання (Deployment Diagram)
     
     
     Далі було побудовано UML-діаграми прецедентів, яка описує функції серверної частини системи та способи взаємодії користувачів із нею (рис 2.2).


Рисунок 2.2 - UML-діаграма прецедентів  
     Наступним етапом було створення ER-модель даних (діаграми) (Entity–Relationship Model) (рис 2.3). На основі цієї діаграми була створена діаграма структури бази даних (рис 2.4).


Рисунок 2.3 - ER-діаграма даних (Entity–Relationship Model)

     Серверну частину системи реалізовано за допомогою Node.js і Express. Для роботи з базою даних використовується Mongoose, яка надає інструменти для створення схем та управління даними у MongoDB. Логування запитів реалізовано за допомогою Morgan. Cookie-parser використовується для обробки файлів cookie, що полегшує управління сесіями та авторизацією. CORS застосовується для забезпечення взаємодії між сервером і клієнтами з різних доменів. Система авторизації реалізована за допомогою JWT (JSON Web Token), що забезпечує безпечний доступ користувачів до різних частин системи.  Автоматичне  створення  директорій  для завантаження файлів

(products, customize, categories) здійснюється через спеціальний скрипт під час запуску сервера. Система маршрутизації (Router Modules) включає маршрути для управління авторизацією, категоріями, продуктами, платежами, замовленнями.

Рисунок 2.4 - Діаграма структури бази даних

     У межах розробки програмної системи було побудовано UML діаграму взаємодії (Interaction Overview Diagram) (рис 2.5), яка відображає загальну логіку користувацького сценарію — від моменту входу в систему до оформлення замовлення. Діаграма демонструє основні етапи взаємодії між користувачем, інтерфейсом, серверною частиною та базою даних. Такий підхід дозволяє візуально представити послідовність дій та визначити відповідальність кожного компонента системи на різних етапах виконання запитів.


Рисунок 2.5 - UML діаграму взаємодії (Interaction Overview Diagram)

Специфікація розробленого API Продукти (Products)
GET /api/product/single-product/{pId} Status code: 200 OK
Response:
{
"Product": {
"pSold": 0,
"pQuantity": 750, "pImages": [

"1742407638027_Cineview-Studios-Staff-2048x1364.jpg",
"1742407638032_ecommerce-photography-setup.jpg"
],
"pOffer": "33",
"_id": "67db07d60cdd5e2458c6c996", "pName": "Camera",
"pDescription": "Equipment for photo studio.", "pPrice": 500,
"pCategory": {
"_id": "67db067b0cdd5e2458c6c98c", "cName": "Photo"
},
"pStatus": "Active", "pRatingsReviews": [],
"createdAt": "2025-03-19T18:07:18.038Z", "updatedAt": "2025-03-19T18:07:18.038Z",
"	v": 0
}
}
Кошик (Cart product)
GET /api/product/cart-product Status code: 200 OK Response:
{
"Products": [
{
"pSold": 0,
"pQuantity": 750,

"pImages": [


"1742407638027_Cineview-Studios-Staff-2048x1364.jpg",
"1742407638032_ecommerce-photography-setup.jpg"
],
"pOffer": "33",
"_id": "67db07d60cdd5e2458c6c996", "pName": "Camera",
"pDescription": "Equipment for photo studio.", "pPrice": 500,
"pCategory": "67db067b0cdd5e2458c6c98c", "pStatus": "Active",
"pRatingsReviews": [],
"createdAt": "2025-03-19T18:07:18.038Z", "updatedAt": "2025-03-19T18:07:18.038Z",
"	v": 0
}
]
}
Всі категорії (Categories) GET /api/category/all-category Status code: 200 OK Response:
{
"Categories": [
{
"_id": "67db067b0cdd5e2458c6c98c", "cName": "Photo",
"cDescription": "Equipment for photo.", "cStatus": "Active",
"cImage":
"1742407291347_Best-Photography-Studio-Hire-London.jpg",
"createdAt": "2025-03-19T18:01:31.377Z",

"updatedAt": "2025-03-19T18:01:31.377Z",
"	v": 0
},
{
"_id": "67db065d0cdd5e2458c6c988", "cName": "Sport",
"cDescription": "Equipment for sport activity.", "cStatus": "Active",
"cImage":
"1742407261627_Mountain-Biking-Equipment.jpg",
"createdAt": "2025-03-19T18:01:01.658Z", "updatedAt": "2025-03-19T18:01:01.658Z",
"	v": 0
}
]
}
Всі продукти (All products) GET /api/product/all-product Status code: 200 OK Response:
{
"Products": [
{
"pSold": 0,
"pQuantity": 750, "pImages": [

"1742407638027_Cineview-Studios-Staff-2048x1364.jpg",
"1742407638032_ecommerce-photography-setup.jpg"
],
"pOffer": "33",
"_id": "67db07d60cdd5e2458c6c996", "pName": "Camera",

"pDescription": "Equipment for photo studio.", "pPrice": 500,
"pCategory": {
"_id": "67db067b0cdd5e2458c6c98c", "cName": "Photo"
},
"pStatus": "Active", "pRatingsReviews": [],
"createdAt": "2025-03-19T18:07:18.038Z", "updatedAt": "2025-03-19T18:07:18.038Z",
"	v": 0
},
{
"pSold": 0,
"pQuantity": 200, "pImages": [
"1742407513578_ski.jpg", "1742407513580_Лыжи.jpg"
],
"pOffer": "25",
"_id": "67db07590cdd5e2458c6c992", "pName": "Ski",
"pDescription": "Equipment for skiing.", "pPrice": 150,
"pCategory": {
"_id": "67db065d0cdd5e2458c6c988", "cName": "Sport"
},
"pStatus": "Active", "pRatingsReviews": [],
"createdAt": "2025-03-19T18:05:13.591Z", "updatedAt": "2025-03-19T18:05:13.591Z",
"	v": 0
}
]
}



3 ВИСНОВКИ

     У ході лабораторної роботи було реалізовано основну мету — створення серверної частини та API для системи оренди спорядження для хобі та розваг. Розробка включала етапи від створення UML-діаграм до документування API, що забезпечило чіткість процесу.
     Використання веб-фреймворку Express забезпечило ефективне оброблення HTTP-запитів, маршрутизацію та підключення middleware. Бібліотека Mongoose дозволила зручно працювати з базою даних MongoDB, забезпечуючи збереження та обробку даних.
     Для забезпечення безпечного доступу користувачів до різних частин системи було впроваджено JWT (JSON Web Token). Додаткові middleware, такі як Morgan, Cookie-parser та CORS, сприяли підвищенню безпеки та зручності роботи з клієнтськими запитами.


