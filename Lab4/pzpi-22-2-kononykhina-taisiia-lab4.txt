         Міністерство освіти і науки України Харківський національний університет радіоелектроніки


Кафедра програмної інженерії






Звіт
З дисципліни «Архітектура програмного забезпечення» З лабораторної роботи №4
На тему: «РОЗРОБКА ПРОГРАМНОЇ АРХІТЕКТУРИ, СТВОРЕННЯ ТА ВІДЛАГОДЖЕННЯ ПРОГРАМНОГО КОДУ ВЕБ КЛІЄНТА ПРОГРАМНОЇ СИСТЕМИ»






Виконавець:
ст. гр. ПЗПІ-22-2	Кононихіна Т.Р.

Перевірив:
доц. каф. ПІ	Сокорчук І. П.





Харків 2025

     Назва проекту: Програмна система для оренди спорядження для хобі та розваг.

1 МЕТА РОБОТИ


     Метою даної лабораторної роботи є розробка клієнтської/front-end частини програмної системи.

2 ОПИС ВИКОНАНОЇ РОБОТИ

     У межах виконання лабораторної роботи було реалізовано клієнтську частину вебзастосунку для системи оренди спорядження з використанням бібліотеки React. Це дало змогу створити гнучкий та інтерактивний інтерфейс, зручний для користувачів. Початковий етап включав налаштування структури проєкту, організацію директорій та базових компонентів відповідно до принципів сучасної розробки односторінкових застосунків (SPA).
     Розроблено основні сторінки: головну, сторінку товарів, реєстрацію й авторизацію, кошик, оформлення замовлення. Також створено окремий адміністративний розділ для керування категоріями, товарами та перегляду оформлених замовлень. Усі компоненти взаємодіють із серверною частиною через REST API.
     Для реалізації багатомовного інтерфейсу було інтегровано бібліотеку react-i18next. Це забезпечило підтримку англійської та української мов на всіх ключових сторінках, підвищивши зручність для користувачів з різних мовних середовищ.
     Візуальне оформлення інтерфейсу реалізовано з використанням бібліотеки Material-UI, що дозволило створити сучасний, адаптивний дизайн із єдиним стилістичним підходом.
     У результаті роботи було створено повноцінний вебклієнт із усією базовою функціональністю, інтернаціоналізацією, авторизацією та можливістю адміністрування, що відповідає вимогам до архітектури програмної системи.
     
3 ХІД РОБОТИ
	
     На першому етапі було побудовано UML-діаграму прецедентів (Use Case Diagram), яка відображає основні функції клієнтської частини програмної системи та взаємодію з нею користувача й адміністратора (рис. 3.1). Діаграма охоплює такі сценарії, як реєстрація, авторизація, перегляд і фільтрація товарів, додавання до кошика й обраного, оформлення та перегляд замовлень. Окремо враховано можливість зміни мови інтерфейсу для реалізації багатомовної підтримки. Для адміністратора передбачено функціонал додавання, редагування та видалення товарів і категорій, а також керування замовленнями. Така структура дає змогу чітко визначити ролі, функціональність та гнучкість системи щодо потреб різних користувачів.

Рисунок 3.1 - UML-діаграму прецедентів (Use Case Diagram)


		На наступному етапі було створено UML-діаграму компонентів (Component Diagram), яка відображає архітектурну структуру програмної системи на рівні логічних модулів (рис. 3.2). У діаграмі виділено три основні частини: клієнтську (React), серверну (Node.js з Express) та базу даних (MongoDB). Кожна частина представлена ключовими компонентами — наприклад, модулі автентифікації, замовлень, товарів, обраного, кабінету користувача. Окремо вказано взаємозв’язки між компонентами фронтенду та відповідними API-сервісами на бекенді, а також між контролерами серверної частини та колекціями бази даних. Діаграма наочно демонструє організацію системи, залежності між модулями та їхню роль у загальній функціональності..


Рисунок 3.2 - UML діаграму компонент (Component Diagram)


	У рамках розробки було побудовано UML-діаграму діяльності (рис. 3.3), яка ілюструє типовий сценарій взаємодії користувача з вебклієнтом системи. Діаграма описує основні дії: від відкриття сайту, вибору мови, проходження авторизації або реєстрації до перегляду товарів, додавання до кошика, редагування та оформлення замовлення. Враховано можливість додавання товарів до списку обраного. Така діаграма дозволяє візуалізувати послідовність дій користувача й підкреслює логіку роботи клієнтської частини програмної системи.


Рисунок 3.3 - UML-діаграми діяльності (Activity Diagram)


	У межах виконання роботи було створено UML-діаграму станів, яка описує послідовність дій користувача під час створення замовлення (рис. 3.4). Діаграма охоплює процес від перегляду товарів, додавання до кошика, редагування вмісту до фінального створення замовлення. Такий підхід дозволяє візуалізувати логіку взаємодії клієнта з інтерфейсом та підкреслює важливі етапи у користувацькому сценарії.


Рисунок 3.4 - UML діаграму станів (State Diagram).


4 ВИСНОВКИ

	У результаті виконання лабораторної роботи було реалізовано архітектуру вебклієнта програмної системи для оренди спорядження, що включає взаємодію з сервером і базою даних. Створено інтерфейс для перегляду товарів, керування кошиком, обраним і оформленням замовлень. Налагоджено механізм аутентифікації та реєстрації користувачів, а також реалізовано багатомовність інтерфейсу за допомогою локалізації.
     Таким чином, сформовано основу для подальшого розвитку клієнтської частини, розширення функціоналу та інтеграції з іншими модулями системи.



